@model Chasoliveira.Core.Dto.PersonDTO

@{
    ViewData["Title"] = Model.DisplayName;
}
<div id="header" class="row">
    <div class="col-sm-2">
        <img class="propic" src="@Model.PhotoProfile" alt="@Model.FullName">
    </div>
    <div class="col-sm-10">
        <div class="cv-title">
            <div class="row">
                <div class="col-sm-7">
                    <h1>@Model?.DisplayName</h1>
                </div>
                <div class="col-sm-5 text-right dl-share">
                    <a class="btn btn-success" href="~/document/cv_charles_oliveira.pdf" title="Baixe o pdf aqui" target="_blank"><span class="fa fa-download"></span> Download CV</a>
                </div>
            </div>
            <h2>@Model.Occupation</h2>
        </div>
        <div class="row">
            <div class="col-sm-4">
                @await Component.InvokeAsync("Contacts", new { personId = Model.Id })
            </div>
            <div class="col-sm-8">
                @await Component.InvokeAsync("Social", new { personId = Model.Id })
            </div>
        </div>
    </div>
</div>
<hr class="firsthr">
<div class="col-md-8 mainleft">
    <div id="statement" class="row mobmid">
        <div class="col-sm-1">
            <span class="secicon fa fa-user"></span>
        </div>
        <div class="col-sm-11">
            <h3>Personal statement</h3>
            <p class="text">@Model.PersonStatment</p>
            <p class="signature">@string.Format($"{Model.FirstName} {Model.LastName}")</p>
        </div>
    </div>
    @await Component.InvokeAsync("PositionHistory", new { personId = Model.Id })
    @await Component.InvokeAsync("EducationHistory", new { personId = Model.Id })
    @await Component.InvokeAsync("CoursesHistory", new { personId = Model.Id })
</div>
<div class="col-md-4 mainright">
    @await Component.InvokeAsync("Skills", new { personId = Model.Id })
</div>
